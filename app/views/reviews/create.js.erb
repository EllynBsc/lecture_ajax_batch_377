// execute this ajax file
// console.log('<%#= @review.content %>')

// The logic for this file:
 // if the review input from the user does not have validation error
  // 1.add this review input inside of my dom
  // 2. refreshing the form
 // else if i have a validation error
  // 1.refresh the form with the validation error displaying
 // end


//let's build the function that allows me to add a review

//HERE WE'RE USING ES5 version of javascript not ES6

function addReview(review) {
  // We want to be able to insert a review from the user inside of the DOM
  // 1.select the dom element that i want to add the review in
  const reviewsBox = document.getElementById('reviews');
  // 2. insert this review inside of the dom element
  reviewsBox.insertAdjacentHTML('beforeend', review);
}

//Let's build the function that allows me to refresh my form
function refreshTheForm(textToRender) {
  const form = document.getElementById('new_review');
   // I get it from inspecting my simple form for and it's the id on the form level generated by the helper
  form.innerHTML = textToRender;
}



<% if @review.errors.any? %>
  // refresh the form passing the validation of the @review i was trying to inject
  refreshTheForm('<%= j render "reviews/form", restaurant: @restaurant, review: @review %>')
<% else %>
  addReview('<%= j render  "reviews/show", review: @review %>')
  // refresh the form passing a new empty review instance so the user can post a new review
  refreshTheForm('<%= j render "reviews/form", restaurant: @restaurant, review: Review.new %>')
<% end %>
